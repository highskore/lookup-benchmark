// SPDX-License-Identifier: MIT

// 36 big constants
#define constant BRUH1 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH2 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH3 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH4 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH5 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH6 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH7 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH8 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH9 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH10 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH11 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH12 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH13 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH14 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH15 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH16 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH17 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH18 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH19 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH20 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH21 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH22 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH23 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH24 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH25 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH26 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH27 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH28 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH29 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH30 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH31 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH32 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH33 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH34 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH35 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH36 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH37 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH38 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH39 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH40 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH41 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH42 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH43 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH44 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH45 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH46 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH47 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH48 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH49 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH50 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH51 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH52 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH53 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH54 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH55 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH56 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH57 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH58 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH59 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH60 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH61 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH62 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH63 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH64 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH65 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH66 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH67 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH68 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH69 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH70 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH71 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#define constant BRUH72 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

// Solidity contract size
#define constant SOL_SIZE = 0x98

#define macro LOOKUP_5() = takes (2) returns (2) {
  // Input Stack                [index, return_dest]
  0x20
  dup2
  gt
  thirty_two_to_sixty_four
  [SOL_SIZE]
  add
  jumpi

  // zero_to_thirty_two
  [BRUH1]
  dup2
  0x08
  mul
  shr
  0xff
  and
  [BRUH2]
  dup3
  0x08
  mul
  shr
  0xff
  and
  0x08
  shl
  or
  [BRUH3]
  dup3
  0x08
  mul
  shr
  0xff
  and
  0x10
  shl
  or
  [BRUH4]
  dup3
  0x08
  mul
  shr
  0xff
  and
  0x18
  shl
  or
  [BRUH5]
  dup3
  0x08
  mul
  shr
  0xff
  and
  0x20
  shl
  or
  [BRUH6]
  dup3
  0x08
  mul
  shr
  0xff
  and
  0x28
  shl
  or
  [BRUH7]
  dup3
  0x08
  mul
  shr
  0xff
  and
  0x30
  shl
  or
  [BRUH8]
  dup3
  0x08
  mul
  shr
  0xff
  and
  0x38
  shl
  or
  [BRUH9]
  dup3
  0x08
  mul
  shr
  0xff
  and
  0x40
  shl
  or
  swap1
  pop
  swap1
  jump

  thirty_two_to_sixty_four:
    0x40
    dup2
    gt
    sixty_four_to_ninety_six
    [SOL_SIZE]
    add
    jumpi

    // thirty_two_to_sixty_four
    0x20
    sub
    //
    [BRUH10]
    dup2
    0x08
    mul
    shr
    0xff
    and
    [BRUH11]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x08
    shl
    or
    [BRUH12]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x10
    shl
    or
    [BRUH13]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x18
    shl
    or
    [BRUH14]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x20
    shl
    or
    [BRUH15]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x28
    shl
    or
    [BRUH16]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x30
    shl
    or
    [BRUH17]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x38
    shl
    or
    [BRUH18]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x40
    shl
    or
    swap1
    pop
    swap1
    jump

  sixty_four_to_ninety_six:
    0x60
    dup2
    gt
    ninety_six_to_one_twenty_eight
    [SOL_SIZE]
    add
    jumpi

    // sixty_four_to_ninety_six
    0x60
    sub
    //
    [BRUH19]
    dup2
    0x08
    mul
    shr
    0xff
    and
    [BRUH20]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x08
    shl
    or
    [BRUH21]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x10
    shl
    or
    [BRUH22]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x18
    shl
    or
    [BRUH23]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x20
    shl
    or
    [BRUH24]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x28
    shl
    or
    [BRUH25]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x30
    shl
    or
    [BRUH26]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x38
    shl
    or
    [BRUH27]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x40
    shl
    or
    swap1
    pop
    swap1
    jump

ninety_six_to_one_twenty_eight:
    0x80
    dup2
    gt
    one_twenty_eight_to_one_sixty
    [SOL_SIZE]
    add
    jumpi
    0x80
    sub
    [BRUH28]
    dup2
    0x08
    mul
    shr
    0xff
    and
    [BRUH29]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x08
    shl
    or
    [BRUH30]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x10
    shl
    or
    [BRUH31]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x18
    shl
    or
    [BRUH32]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x20
    shl
    or
    [BRUH33]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x28
    shl
    or
    [BRUH34]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x30
    shl
    or
    [BRUH35]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x38
    shl
    or
    [BRUH36]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x40
    shl
    or
    swap1
    pop
    swap1
    jump

one_twenty_eight_to_one_sixty:
    0xa0
    dup2
    gt
    one_sixty_to_one_ninety_two
    [SOL_SIZE]
    add
    jumpi
    0xa0
    sub
    [BRUH37]
    dup2
    0x08
    mul
    shr
    0xff
    and
    [BRUH38]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x08
    shl
    or
    [BRUH39]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x10
    shl
    or
    [BRUH40]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x18
    shl
    or
    [BRUH41]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x20
    shl
    or
    [BRUH42]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x28
    shl
    or
    [BRUH43]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x30
    shl
    or
    [BRUH44]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x38
    shl
    or
    [BRUH45]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x40
    shl
    or
    swap1
    pop
    swap1
    jump

one_sixty_to_one_ninety_two:
    0xc0
    dup2
    gt
    one_ninety_two_to_two_twenty_four
    [SOL_SIZE]
    add
    jumpi
    0xc0
    sub
    [BRUH46]
    dup2
    0x08
    mul
    shr
    0xff
    and
    [BRUH47]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x08
    shl
    or
    [BRUH48]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x10
    shl
    or
    [BRUH49]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x18
    shl
    or
    [BRUH50]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x20
    shl
    or
    [BRUH51]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x28
    shl
    or
    [BRUH52]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x30
    shl
    or
    [BRUH53]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x38
    shl
    or
    [BRUH54]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x40
    shl
    or
    swap1
    pop
    swap1
    jump

one_ninety_two_to_two_twenty_four:
    0xe0
    dup2
    gt
    two_twenty_four_to_two_fifty_six
    [SOL_SIZE]
    add
    jumpi
    0xe0
    sub
    [BRUH55]
    dup2
    0x08
    mul
    shr
    0xff
    and
    [BRUH56]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x08
    shl
    or
    [BRUH57]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x10
    shl
    or
    [BRUH58]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x18
    shl
    or
    [BRUH59]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x20
    shl
    or
    [BRUH60]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x28
    shl
    or
    [BRUH61]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x30
    shl
    or
    [BRUH62]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x38
    shl
    or
    [BRUH63]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x40
    shl
    or
    swap1
    pop
    swap1
    jump

two_twenty_four_to_two_fifty_six:
    0x100
    sub
    [BRUH64]
    dup2
    0x08
    mul
    shr
    0xff
    and
    [BRUH65]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x08
    shl
    or
    [BRUH66]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x10
    shl
    or
    [BRUH67]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x18
    shl
    or
    [BRUH68]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x20
    shl
    or
    [BRUH69]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x28
    shl
    or
    [BRUH70]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x30
    shl
    or
    [BRUH71]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x38
    shl
    or
    [BRUH72]
    dup3
    0x08
    mul
    shr
    0xff
    and
    0x40
    shl
    or
    swap1
    pop
    swap1
    jump
}

#define macro MAIN() = takes (0) returns (0) {
  jumpdest
  LOOKUP_5()
}

